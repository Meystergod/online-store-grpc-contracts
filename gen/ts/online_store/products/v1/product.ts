// @generated by protobuf-ts 2.2.2 with parameter long_type_string
// @generated from protobuf file "online_store/products/v1/product.proto" (package "online_store.products.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message online_store.products.v1.Product
 */
export interface Product {
    /**
     * @generated from protobuf field: uint32 id = 1;
     */
    id: number;
    /**
     * @generated from protobuf field: string brand = 2;
     */
    brand: string;
    /**
     * @generated from protobuf field: string title = 3;
     */
    title: string;
    /**
     * @generated from protobuf field: string description = 4;
     */
    description: string;
    /**
     * @generated from protobuf field: string price = 5;
     */
    price: string;
    /**
     * @generated from protobuf field: string image_id = 6;
     */
    imageId: string;
    /**
     * @generated from protobuf field: string specifications = 7;
     */
    specifications: string;
    /**
     * @generated from protobuf field: int64 updated_at = 8;
     */
    updatedAt: string;
    /**
     * @generated from protobuf field: int64 created_at = 9;
     */
    createdAt: string;
    /**
     * @generated from protobuf field: uint32 category_id = 10;
     */
    categoryId: number;
    /**
     * @generated from protobuf field: uint32 discount_id = 11;
     */
    discountId: number;
    /**
     * @generated from protobuf field: uint32 inventory_id = 12;
     */
    inventoryId: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class Product$Type extends MessageType<Product> {
    constructor() {
        super("online_store.products.v1.Product", [
            { no: 1, name: "id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "brand", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "price", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "image_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "specifications", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/ },
            { no: 9, name: "created_at", kind: "scalar", T: 3 /*ScalarType.INT64*/ },
            { no: 10, name: "category_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "discount_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "inventory_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<Product>): Product {
        const message = { id: 0, brand: "", title: "", description: "", price: "", imageId: "", specifications: "", updatedAt: "0", createdAt: "0", categoryId: 0, discountId: 0, inventoryId: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Product>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Product): Product {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 id */ 1:
                    message.id = reader.uint32();
                    break;
                case /* string brand */ 2:
                    message.brand = reader.string();
                    break;
                case /* string title */ 3:
                    message.title = reader.string();
                    break;
                case /* string description */ 4:
                    message.description = reader.string();
                    break;
                case /* string price */ 5:
                    message.price = reader.string();
                    break;
                case /* string image_id */ 6:
                    message.imageId = reader.string();
                    break;
                case /* string specifications */ 7:
                    message.specifications = reader.string();
                    break;
                case /* int64 updated_at */ 8:
                    message.updatedAt = reader.int64().toString();
                    break;
                case /* int64 created_at */ 9:
                    message.createdAt = reader.int64().toString();
                    break;
                case /* uint32 category_id */ 10:
                    message.categoryId = reader.uint32();
                    break;
                case /* uint32 discount_id */ 11:
                    message.discountId = reader.uint32();
                    break;
                case /* uint32 inventory_id */ 12:
                    message.inventoryId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Product, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).uint32(message.id);
        /* string brand = 2; */
        if (message.brand !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.brand);
        /* string title = 3; */
        if (message.title !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.title);
        /* string description = 4; */
        if (message.description !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.description);
        /* string price = 5; */
        if (message.price !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.price);
        /* string image_id = 6; */
        if (message.imageId !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.imageId);
        /* string specifications = 7; */
        if (message.specifications !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.specifications);
        /* int64 updated_at = 8; */
        if (message.updatedAt !== "0")
            writer.tag(8, WireType.Varint).int64(message.updatedAt);
        /* int64 created_at = 9; */
        if (message.createdAt !== "0")
            writer.tag(9, WireType.Varint).int64(message.createdAt);
        /* uint32 category_id = 10; */
        if (message.categoryId !== 0)
            writer.tag(10, WireType.Varint).uint32(message.categoryId);
        /* uint32 discount_id = 11; */
        if (message.discountId !== 0)
            writer.tag(11, WireType.Varint).uint32(message.discountId);
        /* uint32 inventory_id = 12; */
        if (message.inventoryId !== 0)
            writer.tag(12, WireType.Varint).uint32(message.inventoryId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message online_store.products.v1.Product
 */
export const Product = new Product$Type();
